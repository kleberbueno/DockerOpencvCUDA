docker build -t opencv4.9-cuda-11.2-cudnn8 . --progress=plain --no-cache




##rodar container com acesso internet habilitando gpu
docker run -it --gpus all --net=host opencv4.9-cuda-11.2-cudnn8




##install tensorflow GPU 
pip install "tensorflow<2.11" 


##check GPU i
python -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"
or
python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"



append file ~/.bashrc
export PYTHONPATH=/usr/local/lib/python3.8/site-packages:$PYTHONPATH


echo export PYTHONPATH=/usr/local/lib/python3.8/site-packages:$PYTHONPATH ~/.bashrc







******************CREATE IMAGE
docker build -t opencv4.9-cuda-12.2.2-cudnn8 -f Dockerfile_opencv_wheel . --progress=plain --no-cache

docker build -t opencv4.10-cuda-12.5-cudnn9 -f Dockerfile_opencv_scratch4.10 . --progress=plain --no-cache


****INSTALL

************** RUN CONTAINER
docker run -it --gpus all --net=host -e NVIDIA_DRIVER_CAPABILITIES=all -e NVIDIA_VISIBLE_DEVICES=all opencv4.9-cuda-12.3.2-cudnn9


docker run -it --gpus all --net=host -v /c/Kleber/Projects/Python/LicensePlateOcrLatestVersion:/app opencv4.9-cuda-12.2.2-cudnn8



*******if facing core.multi arrat Numpy error. Uninstall it and install version 1.26.4

